#include<iostream>
using namespace std;
int main(){
    int arr[3][3];
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            cout<<"enter number ";
            cin>>arr[i][j];
        }
    }
    cout<<endl;
     for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
    int nz=0,z=0;
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            if(arr[i][j]==0) z++;
        else nz++;
        }
    }
    if(nz>z) cout<<"not a sparse matrix";
    else{
        int sp[nz+1][3], k=1;
        sp[0][0]=3;
        sp[0][1]=3;
        sp[0][2]=nz;
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                if(arr[i][j]!=0){
                    sp[k][0]=i;
                    sp[k][1]=j;
                    sp[k][2]=arr[i][j];
                    k++;
                }
            }
        }
          for(int i=0;i<=nz;i++){
        for(int j=0;j<3;j++){
            cout<<sp[i][j]<<" ";
        }
        cout<<endl;
    }
     int tr[nz+1][3];
        tr[0][0] = sp[0][1]; // rows = original cols
        tr[0][1] = sp[0][0]; // cols = original rows
        tr[0][2] = sp[0][2]; // same number of non-zeros

        int p=1;
        for(int i=0;i<3;i++){  // loop through all columns
            for(int j=1; j<=nz; j++){
                if(sp[i][1] == i){  // if element's column == current col to keep sorted
                    tr[p][0] = sp[i][1];
                    tr[p][1] = sp[i][0];
                    tr[p][2] = sp[i][2];
                    p++;
                }
            }
        }
        for(int i=0;i<=nz;i++){
            for(int j=0;j<3;j++){
                cout << tr[i][j] << " ";
            }
            cout << endl;
        }
    }
    return 0;
  
}
